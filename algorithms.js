// JAVASCRIPT PROBLEMS AND SOLUTIONS
//1. A permutation is an ordered arrangement of objects. What is the millionth lexicographic permutation of the digits 0,1,2,3,4,5,6,7,8,9
function getNthPermutation(n, digits) {
    let result = [];
    let factorial = 1;
  
    for (let i = 1; i <= digits.length; i++) {
        factorial *= i;
    }
  
    n--; // Convert to 0-based index
  
    for (let i = digits.length; i > 0; i--) {
        factorial /= i;
        const index = Math.floor(n / factorial);
        n %= factorial;
        result.push(digits.splice(index, 1)[0]);
    }
  
    return result.join('');
  }
  
  const millionthPermutation = getNthPermutation(1000000, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
  console.log(millionthPermutation);
  
  //2. Find the sum of the digits in the number 100!
  function calculateFactorial(num) {
    if (num === 0 || num === 1) {
        return BigInt(1);
    } else {
        return BigInt(num) * calculateFactorial(num - 1);
    }
  }
  
  function sumOfDigits(num) {
    return num.toString().split('').reduce((sum, digit) => sum + parseInt(digit, 10), 0);
  }
  
  const factorial100 = calculateFactorial(100);
  const sumDigitsFactorial100 = sumOfDigits(factorial100);
  
  console.log(sumDigitsFactorial100);
  
  //3. The sequence of triangle numbers is generated by adding the natural numbers. What is the value of the first triangle number to have over five hundred divisions 
  
  function getDivisorsCount(number) {
    let count = 0;
  
    for (let i = 1; i <= Math.sqrt(number); i++) {
        if (number % i === 0) {
            count += 2; // Both i and number/i are divisors
        }
    }
  
    // Adjust if the number is a perfect square
    if (Math.sqrt(number) ** 2 === number) {
        count--;
    }
  
    return count;
  }
  
  function findTriangleNumberWithDivisors(divisorCount) {
    let triangleNumber = 0;
    let naturalNumber = 1;
  
    while (true) {
        triangleNumber += naturalNumber;
        naturalNumber++;
  
        const divisorsCount = getDivisorsCount(triangleNumber);
        if (divisorsCount > divisorCount) {
            return triangleNumber;
        }
    }
  }
  
  const targetDivisorCount = 500;
  const result2 = findTriangleNumberWithDivisors(targetDivisorCount);
  
  console.log(result2);
  
  //4. The number, 197, 8Â£ called a circular orine because all rotations of the digit: 197,971, and 719 are themselves prime.How many circular primes are there below one million
  
  function isPrime(num) {
    if (num < 2) {
        return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) {
            return false;
        }
    }
    return true;
  }
  
  function rotateString(str) {
    const rotations = [];
    for (let i = 0; i < str.length; i++) {
        const rotated = str.substring(i) + str.substring(0, i);
        rotations.push(rotated);
    }
    return rotations;
  }
  
  function areAllRotationsPrime(num) {
    const rotations = rotateString(num.toString());
    return rotations.every(rotation => isPrime(parseInt(rotation, 10)));
  }
  
  function countCircularPrimes(limit) {
    let count = 0;
    for (let i = 2; i < limit; i++) {
        if (isPrime(i) && areAllRotationsPrime(i)) {
            count++;
        }
    }
    return count;
  }
  
  const limit = 1000000;
  const result = countCircularPrimes(limit);
  
  console.log(result);
  
  
  //React Folder structure
  //1. npm init react-app
  // robots.txt file - which is used for search engine optimization. 
  // Also, there is a manifest.json file - which is used to provide some metadata to a device when you're React powered web app is installed on it
  /*
  The package.json file lists information pertaining to my app, which allows npm to run several scripts and perform various tasks in the app itself. The package-loc.json file holds the list of all dependencies with a specific versions. The package.json file helps npm rebuild the app on another machine. Or if we delete the node modules folder with all the files that our project needs to run, the package-loc.json file has all the information for npm to be able to rebuild those files reliably. This file is there to ensure the npm tracks all the modules installations properly. As a general rule, it's better to leave these files where they are at the moment as they are required for the app to function.
  */
 //If the links are internal to the app - using the <a> tag is simply not the React way of doing things. 